/* Generated By:JavaCC: Do not edit this line. JavascriptTreeConstants.java Version 7.0.5 */
package javascriptParser.tree;

import javascriptParser.parser.*;

public interface JavascriptTreeConstants
{
  public int JJTPRIMARYEXPRESSION = 0;
  public int JJTLITERAL = 1;
  public int JJTARRAYLITERAL = 2;
  public int JJTELLISION = 3;
  public int JJTELEMENTLIST = 4;
  public int JJTARRAYELEMENT = 5;
  public int JJTSPREADELEMENT = 6;
  public int JJTOBJECTLITERAL = 7;
  public int JJTPROPERTYDEFINITIONLIST = 8;
  public int JJTPROPERTYDEFINITION = 9;
  public int JJTPARENTHESIZEDEXPRESSION = 10;
  public int JJTLEFTSIDEEXPRESSION = 11;
  public int JJTCALLEXPRESSION = 12;
  public int JJTARGUMENTS = 13;
  public int JJTARGUMENTLIST = 14;
  public int JJTMEMBEREXPRESSION = 15;
  public int JJTUPDATEEXPRESSION = 16;
  public int JJTUNARYEXPRESSION = 17;
  public int JJTEXPONENTIATIONOPERATOR = 18;
  public int JJTMULTIPLICATIVEEXPRESSION = 19;
  public int JJTADDITIVEEXPRESSION = 20;
  public int JJTSHIFTEXPRESSION = 21;
  public int JJTRELATIONALEXPRESSION = 22;
  public int JJTEQUALITYEXPRESSION = 23;
  public int JJTBITWISEANDEXPRESSION = 24;
  public int JJTBITWISEXOREXPRESSION = 25;
  public int JJTBITWISEOREXPRESSION = 26;
  public int JJTLOGICALANDEXPRESSION = 27;
  public int JJTLOGICALOREXPRESSION = 28;
  public int JJTCONDITIONALEXPRESSION = 29;
  public int JJTASSIGNMENTEXPRESSION = 30;
  public int JJTASSIGNMENTOPERATOR = 31;
  public int JJTEXPRESSION = 32;
  public int JJTFUNCTIONEXPRESSION = 33;
  public int JJTSTATEMENT = 34;
  public int JJTEMPTYSTATEMENT = 35;
  public int JJTEXPRESSIONSTATEMENT = 36;
  public int JJTVARIABLEDEFINITION = 37;
  public int JJTVARIABLEDECLARATIONLIST = 38;
  public int JJTVARIABLEDECLARATION = 39;
  public int JJTBLOCK = 40;
  public int JJTLABELEDSTATEMENT = 41;
  public int JJTIFSTATEMENT = 42;
  public int JJTSWITCHSTATEMENT = 43;
  public int JJTCASEBLOCK = 44;
  public int JJTCASECLAUSES = 45;
  public int JJTCASECLAUSE = 46;
  public int JJTDEFAULTCLAUSE = 47;
  public int JJTDOSTATEMENT = 48;
  public int JJTWHILESTATEMENT = 49;
  public int JJTFORSTATEMENT = 50;
  public int JJTFORHEADER = 51;
  public int JJTFORINITIALIZER = 52;
  public int JJTFORINHEADER = 53;
  public int JJTFORINBINDING = 54;
  public int JJTCONTINUESTATEMENT = 55;
  public int JJTBREAKSTATEMENT = 56;
  public int JJTRETURNSTATEMENT = 57;
  public int JJTTHROWSTATEMENT = 58;
  public int JJTTRYSTATEMENT = 59;
  public int JJTCATCHCLAUSES = 60;
  public int JJTCATCHCLAUSE = 61;
  public int JJTFINALLYCLAUSE = 62;
  public int JJTNAMEDFUNCTION = 63;
  public int JJTANONYMOUSFUNCTION = 64;
  public int JJTFORMALPARAMETERS = 65;
  public int JJTFUNCTIONBODY = 66;
  public int JJTTOPSTATEMENT = 67;
  public int JJTTOPSTATEMENTS = 68;
  public int JJTPROGRAM = 69;


  public String[] jjtNodeName = {
    "primaryExpression",
    "literal",
    "arrayLiteral",
    "ellision",
    "elementList",
    "arrayElement",
    "spreadElement",
    "objectLiteral",
    "propertyDefinitionList",
    "propertyDefinition",
    "parenthesizedExpression",
    "leftSideExpression",
    "callExpression",
    "arguments",
    "argumentList",
    "memberExpression",
    "updateExpression",
    "unaryExpression",
    "exponentiationOperator",
    "multiplicativeExpression",
    "additiveExpression",
    "shiftExpression",
    "relationalExpression",
    "equalityExpression",
    "bitwiseAndExpression",
    "bitwiseXorExpression",
    "bitwiseOrExpression",
    "logicalAndExpression",
    "logicalOrExpression",
    "conditionalExpression",
    "assignmentExpression",
    "assignmentOperator",
    "expression",
    "functionExpression",
    "statement",
    "emptyStatement",
    "expressionStatement",
    "variableDefinition",
    "variableDeclarationList",
    "variableDeclaration",
    "block",
    "labeledStatement",
    "ifStatement",
    "switchStatement",
    "caseBlock",
    "caseClauses",
    "caseClause",
    "defaultClause",
    "doStatement",
    "whileStatement",
    "forStatement",
    "forHeader",
    "forInitializer",
    "forInHeader",
    "forInBinding",
    "continueStatement",
    "breakStatement",
    "returnStatement",
    "throwStatement",
    "tryStatement",
    "catchClauses",
    "catchClause",
    "finallyClause",
    "namedFunction",
    "anonymousFunction",
    "formalParameters",
    "functionBody",
    "topStatement",
    "topStatements",
    "program",
  };
}
/* JavaCC - OriginalChecksum=507ca6f95c5b8510a368d7ef6240f5c2 (do not edit this line) */
